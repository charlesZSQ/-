/*
** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : debug_test.PRM
**     Project   : debug_test
**     Processor : MC9S12XEP100MAL
**     Compiler  : CodeWarrior HCS12X C Compiler
**     Date/Time : 30/08/2018, 10:10
**     Abstract  :
**        This file is used by the linker. It describes files to be linked,
**        memory ranges, stack size, etc. For detailed description of the PRM file
**        see CodeWarrior documentation. This file is generated by default.
**        You can switch off generation by setting the property
**        "Generate PRM file = no" on the "Build options" tab in CPU component and then modify
**        this file if needed.
**
**     Copyright : 1997 - 2011 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################
*/

NAMES

END

SEGMENTS  /* Here all RAM/ROM areas of the device are listed. Used in PLACEMENT below. */
      RAM           = READ_WRITE    0x2000 TO   0x3FFF;
      ROM_C000      = READ_ONLY     0xC000 TO   0xFEFF;
      PAGE_C0       = READ_ONLY   0xC08000 TO 0xC0BFFF;
      PAGE_C1       = READ_ONLY   0xC18000 TO 0xC1BFFF;
      PAGE_C2       = READ_ONLY   0xC28000 TO 0xC2BFFF;
      PAGE_C3       = READ_ONLY   0xC38000 TO 0xC3BFFF;
      PAGE_C4       = READ_ONLY   0xC48000 TO 0xC4BFFF;
      PAGE_C5       = READ_ONLY   0xC58000 TO 0xC5BFFF;
      PAGE_C6       = READ_ONLY   0xC68000 TO 0xC6BFFF;
      PAGE_C7       = READ_ONLY   0xC78000 TO 0xC7BFFF;
      PAGE_C8       = READ_ONLY   0xC88000 TO 0xC8BFFF;
      PAGE_C9       = READ_ONLY   0xC98000 TO 0xC9BFFF;
      PAGE_CA       = READ_ONLY   0xCA8000 TO 0xCABFFF;
      PAGE_CB       = READ_ONLY   0xCB8000 TO 0xCBBFFF;
      PAGE_CC       = READ_ONLY   0xCC8000 TO 0xCCBFFF;
      PAGE_CD       = READ_ONLY   0xCD8000 TO 0xCDBFFF;
      PAGE_CE       = READ_ONLY   0xCE8000 TO 0xCEBFFF;
      PAGE_CF       = READ_ONLY   0xCF8000 TO 0xCFBFFF;
      PAGE_D0       = READ_ONLY   0xD08000 TO 0xD0BFFF;
      PAGE_D1       = READ_ONLY   0xD18000 TO 0xD1BFFF;
      PAGE_D2       = READ_ONLY   0xD28000 TO 0xD2BFFF;
      PAGE_D3       = READ_ONLY   0xD38000 TO 0xD3BFFF;
      PAGE_D4       = READ_ONLY   0xD48000 TO 0xD4BFFF;
      PAGE_D5       = READ_ONLY   0xD58000 TO 0xD5BFFF;
      PAGE_D6       = READ_ONLY   0xD68000 TO 0xD6BFFF;
      PAGE_D7       = READ_ONLY   0xD78000 TO 0xD7BFFF;
      PAGE_D8       = READ_ONLY   0xD88000 TO 0xD8BFFF;
      PAGE_D9       = READ_ONLY   0xD98000 TO 0xD9BFFF;
      PAGE_DA       = READ_ONLY   0xDA8000 TO 0xDABFFF;
      PAGE_DB       = READ_ONLY   0xDB8000 TO 0xDBBFFF;
      PAGE_DC       = READ_ONLY   0xDC8000 TO 0xDCBFFF;
      PAGE_DD       = READ_ONLY   0xDD8000 TO 0xDDBFFF;
      PAGE_DE       = READ_ONLY   0xDE8000 TO 0xDEBFFF;
      PAGE_DF       = READ_ONLY   0xDF8000 TO 0xDFBFFF;
      PAGE_E0       = READ_ONLY   0xE08000 TO 0xE0BFFF;
      PAGE_E1       = READ_ONLY   0xE18000 TO 0xE1BFFF;
      PAGE_E2       = READ_ONLY   0xE28000 TO 0xE2BFFF;
      PAGE_E3       = READ_ONLY   0xE38000 TO 0xE3BFFF;
      PAGE_E4       = READ_ONLY   0xE48000 TO 0xE4BFFF;
      PAGE_E5       = READ_ONLY   0xE58000 TO 0xE5BFFF;
      PAGE_E6       = READ_ONLY   0xE68000 TO 0xE6BFFF;
      PAGE_E7       = READ_ONLY   0xE78000 TO 0xE7BFFF;
      PAGE_E8       = READ_ONLY   0xE88000 TO 0xE8BFFF;
      PAGE_E9       = READ_ONLY   0xE98000 TO 0xE9BFFF;
      PAGE_EA       = READ_ONLY   0xEA8000 TO 0xEABFFF;
      PAGE_EB       = READ_ONLY   0xEB8000 TO 0xEBBFFF;
      PAGE_EC       = READ_ONLY   0xEC8000 TO 0xECBFFF;
      PAGE_ED       = READ_ONLY   0xED8000 TO 0xEDBFFF;
      PAGE_EE       = READ_ONLY   0xEE8000 TO 0xEEBFFF;
      PAGE_EF       = READ_ONLY   0xEF8000 TO 0xEFBFFF;
      PAGE_F0       = READ_ONLY   0xF08000 TO 0xF0BFFF;
      PAGE_F1       = READ_ONLY   0xF18000 TO 0xF1BFFF;
      PAGE_F2       = READ_ONLY   0xF28000 TO 0xF2BFFF;
      PAGE_F3       = READ_ONLY   0xF38000 TO 0xF3BFFF;
      PAGE_F4       = READ_ONLY   0xF48000 TO 0xF4BFFF;
      PAGE_F5       = READ_ONLY   0xF58000 TO 0xF5BFFF;
      PAGE_F6       = READ_ONLY   0xF68000 TO 0xF6BFFF;
      PAGE_F7       = READ_ONLY   0xF78000 TO 0xF7BFFF;
      PAGE_F8       = READ_ONLY   0xF88000 TO 0xF8BFFF;
      PAGE_F9       = READ_ONLY   0xF98000 TO 0xF9BFFF;
      PAGE_FA       = READ_ONLY   0xFA8000 TO 0xFABFFF;
      PAGE_FB       = READ_ONLY   0xFB8000 TO 0xFBBFFF;
      PAGE_FC       = READ_ONLY   0xFC8000 TO 0xFCBFFF;
      PAGE_FE       = READ_ONLY   0xFE8000 TO 0xFEBFFF;
END

PLACEMENT /* here all predefined and user segments are placed into the SEGMENTS defined above. */
    _PRESTART,
    STARTUP,
    ROM_VAR,
    STRINGS,
    NON_BANKED,
    COPY                INTO   ROM_C000;
    DEFAULT_ROM         INTO   PAGE_FE, PAGE_FC, PAGE_FB, PAGE_FA, PAGE_F9, PAGE_F8, PAGE_F7, PAGE_F6,
                               PAGE_F5, PAGE_F4, PAGE_F3, PAGE_F2, PAGE_F1, PAGE_F0, PAGE_EF, PAGE_EE,
                               PAGE_ED, PAGE_EC, PAGE_EB, PAGE_EA, PAGE_E9, PAGE_E8, PAGE_E7, PAGE_E6,
                               PAGE_E5, PAGE_E4, PAGE_E3, PAGE_E2, PAGE_E1, PAGE_E0, PAGE_DF, PAGE_DE,
                               PAGE_DD, PAGE_DC, PAGE_DB, PAGE_DA, PAGE_D9, PAGE_D8, PAGE_D7, PAGE_D6,
                               PAGE_D5, PAGE_D4, PAGE_D3, PAGE_D2, PAGE_D1, PAGE_D0, PAGE_CF, PAGE_CE,
                               PAGE_CD, PAGE_CC, PAGE_CB, PAGE_CA, PAGE_C9, PAGE_C8, PAGE_C7, PAGE_C6,
                               PAGE_C5, PAGE_C4, PAGE_C3, PAGE_C2, PAGE_C1, PAGE_C0;
    DEFAULT_RAM         INTO   RAM;
END

INIT _EntryPoint                       /* The entry point of the application. This function is generated into the CPU module. */

STACKSIZE 0x0080                       /* Size of the system stack. Value can be changed on the "Build options" tab */
